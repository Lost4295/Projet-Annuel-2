# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Symfony (APP WEB)

on:
  push:
    branches: ["main"]
    paths:
      - "appWeb/**"
      - ".github/workflows/symfony.yml"
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  symfony-tests-web:
    runs-on: ubuntu-latest
    steps:
      #  To automatically get bug fixes and new Php versions for shivammathur/setup-php,
      # change this to (see https://github.com/shivammathur/setup-php#bookmark-versioning):
      - uses: shivammathur/setup-php@v2
        # uses: shivammathur/setup-php@2cb9b829437ee246e9b3cac53555a39208ca6d28
        with:
          php-version: "8.2"
      - uses: actions/checkout@v3
      - name: Copy .env.test.local
        run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"
        working-directory: ./appWeb
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
      - name: Install Dependencies
        run: composer install
        working-directory: ./appWeb
  deployweb:
    runs-on: ubuntu-latest

    # steps:
    #   - uses: actions/checkout@v1

    #   - name: Copy repository contents via scp
    #     uses: appleboy/scp-action@master
    #     env:
    #       host: ${{ secrets.TESTHOST }}
    #       username: ${{ secrets.VPSUSERNAME }}
    #       port: ${{ secrets.PORT }}
    #       key: ${{ secrets.VPSKEY }}
    #     with:
    #       source: "."
    #       target: "/var/www/html/pcs_api"

    #   - name: Executing remote command
    #     uses: appleboy/ssh-action@master
    #     with:
    #       host: ${{ secrets.SITEHOST }}
    #       username: ${{ secrets.VPSUSERNAME }}
    #       port: ${{ secrets.PORT }}
    #       key: ${{ secrets.VPSKEY }}
    #       script: ls
    steps:
      - name: install ssh keys
        # check this thread to understand why its needed:
        # https://stackoverflow.com/a/70447517
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.VPSKEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SITEHOST }} > ~/.ssh/known_hosts
      - name: connect and pull
        run: ssh ${{ secrets.VPSUSERNAME }}@${{ secrets.SITEHOST }} "cd /var/www/appWeb && git pull && composer update && exit"
      - name: cleanup 
        run: rm -rf ~/.ssh  
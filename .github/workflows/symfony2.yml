# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Symfony (API)

on:
  push:
    branches: [ "main" ]
    paths:
    - 'pcs_api/**'
    - '.github/workflows/symfony2.yml'
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  symfony-tests-api:
    runs-on: ubuntu-latest
    steps:
    #  To automatically get bug fixes and new Php versions for shivammathur/setup-php,
    # change this to (see https://github.com/shivammathur/setup-php#bookmark-versioning):
    - uses: shivammathur/setup-php@v2
    # uses: shivammathur/setup-php@2cb9b829437ee246e9b3cac53555a39208ca6d28
      with:
        php-version: '8.2'
    - uses: actions/checkout@v3
    - name: Copy .env.test.local
      run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"
      working-directory: ./pcs_api
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
    - name: Install Dependencies
      run: composer install
      working-directory: ./pcs_api
  deployapi:
    runs-on: ubuntu-latest

    # steps:
    #   - uses: actions/checkout@v1
    #   - uses: webfactory/ssh-agent@v0.9.0
    #     with:
    #       ssh-private-key: ${{ secrets.SSHP }}
    #   - name: Executing remote command
    #     uses: appleboy/ssh-action@master
    #     with:
    #       host: ${{ secrets.TESTHOST }}
    #       username: ${{ secrets.USERNAME }}
    #       port: ${{ secrets.PORT }}
    #       key: ${{ secrets.SSHKEY }}
    #       script: 'cd /var/www/ && sh deploy.sh'
    steps:
      - name: install ssh keys
        # check this thread to understand why its needed:
        # https://stackoverflow.com/a/70447517
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSHKEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.TESTHOST }} > ~/.ssh/known_hosts
      - name: connect and pull
        run: ssh ${{ secrets.USERNAME }}@${{ secrets.TESTHOST }} "cd /var/www/html && sudo -S git checkout main && sudo git pull && exit"
      - name: cleanup
        run: rm -rf ~/.ssh
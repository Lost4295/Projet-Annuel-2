{% extends 'base.html.twig' %}

{% block title %}
	{{"loca"|trans}}
{% endblock %}
{% block stylesheets %}
	<style>

		.bar {
			width: 850px;
			background: #002349;
			box-shadow: 0 0 5px hsl(0 0% 78%);
			height: 55px;
			border-radius: 100vw;
			display: flex;
			justify-content: center;
			font-size: 0.6rem;
		}

		.bar div {
			border-radius: inherit;
			padding: 0.8rem 1.5rem;
			transition: 250ms ease;
		}

		.bar > div:hover {
			background: #25486E;
		}

		.location {
			width: 34%;
		}
		.check-in,
		.check-out,
		.guests {
			width: 22%;
		}

		input[type="text"],
		input[type="date"],
		input[type="number"],
		p.djf, span.t{
			background: none;
			border: none;
			padding: 0.2rem 0 0;
			position: relative;
			top: -15px;
		}
		input[type="number"]
		{
			width: 30px;
		}

		.f {
			 padding: 0 0 0 0!important;
    display: flex; 
    margin-bottom: 22px; 
} 

		/* Remove Arrows/Spinners */
		input::-webkit-outer-spin-button, 
		input::-webkit-inner-spin-button { 
		    -webkit-appearance: none; 
		    margin: 0; 
		} 

		/*.onlynum {
			background: none;
			border: none;
		}
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
	  		-webkit-appearance: none;
	  		margin: 0;
	}*/
		input[type="text"]:focus {
			outline: none;
		}

		::placeholder {
			font-size: 0.75rem;
		}

		.guests {
			position: relative;
		}
		.guests span {
			position: absolute;
			top: 50%;
			right: 8px;
			transform: translateY(-50%);
			background: #3976AE;
			color: #fff;
			font-size: 0.8rem;
			padding: 0.8rem;
			border-radius: 50%;
		}

		.bar > div {
			position: relative;
		}


		.bar > div::before {
			position: absolute;
			content: "";
			left: 0;
			top: 50%;
			transform: translateY(-50%);
			width: 1px;
			height: 55%;
			background: white;
		}

		.bar>div:nth-of-type(1)::before {
			background: transparent;
		}

		.bar>div:hover::before {
			background: transparent;
		}
		.slider-container { 
    width: 100%; 
} 
  
.slider-container { 
    height: 6px; 
    position: relative; 
    background: #e4e4e4; 
    border-radius: 5px; 
} 
  
.slider-container .price-slider { 
    height: 100%; 
    left: 25%; 
    right: 15%; 
    position: absolute; 
    border-radius: 5px; 
    background: #01940b; 
} 
  
.range-input { 
    position: relative; 
} 
  
.range-input input { 
    position: absolute; 
    width: 100%; 
    height: 5px; 
    background: none; 
    top: -5px; 
    pointer-events: none; 
    cursor: pointer; 
    -webkit-appearance: none; 
}
input[type="range"]::-webkit-slider-thumb { 
    height: 18px; 
    width: 18px; 
    border-radius: 70%; 
    background: #555; 
    pointer-events: auto; 
    -webkit-appearance: none; 
} 
	</style>

{% endblock %}

{% block body %}
	<div class="m-3 d-flex align-items-center justify-content-center">
		<div class="bar">
			<div class="text-light location">
				<p>{{'destination'|trans }}</p>
				<input type="text" id="dest" class="text-light" placeholder="{{'dest'|trans}}">
			</div>
			<div class="text-light check-in">
				<p>{{'checkin'|trans}}</p>
				<input type="date" id="startdate" class="text-light" placeholder="{{'when'|trans }}">
			</div>
			<div class="text-light check-out">
				<p>{{'checkout'|trans}}</p>
				<input type="date" id="enddate" class="text-light" placeholder="{{'when'|trans }}">
			</div>
			<div class="text-light price">
				<p>{{'price'|trans}}</p>
				<div class="f d-flex justify-content between " data-bs-toggle="collapse" data-bs-target="#card2" aria-expanded="false" aria-controls="card">
				<input type="number" class=" text-white min-input" value="" readonly><span class='t'> - </span><input type="number" class=" text-white max-input" value="" readonly>
				</div>
			</div>
			<div class="text-light guests">
				<p>{{"guests"|trans }}</p>
				<p class="djf" data-bs-toggle="collapse" data-bs-target="#card" aria-expanded="false" aria-controls="card">0 {{"voyageur"|trans}}</p>
				<span id="search">
					<i class="bi-search"></i>
				</span>
			</div>
		</div>
	</div>
	<div class="collapse" id="card2">
		<div class=" d-flex justify-content-center">
			<div class="card col-3">
				<div class="card-body">
				<div class="slider-container"> 
                    <div class="price-slider"> 
                    </div> 
                </div> 
				<div class="range-input"> 
                <input type="range" class="min-range" min="0" max="200" value="0" step="1"> 
                <input type="range" class="max-range" min="0" max="200" value="200" step="1"> 
				</div>
				</div>
				<span class="bi bi-x-lg" id="clpr"></span>
			</div>
		</div>
	</div>
	<div class="collapse" id="card">
		<div class=" d-flex justify-content-center">
			<div class="card col-3">
				<div class="card-body">
					<div class="form-group">
						<label for="adults">{{"adults"|trans }}</label>
						<div class="d-flex flex-row justify-content-between align-items-center">
							<i class="bi bi-dash-circle moins fs-1"></i>
							<input type="number" class="onlynum form-control" id="adults" min="0" value="0" max="6">
							<i class="bi bi-plus-circle plus fs-1"></i>
						</div>
					</div>
					<div class="form-group">
						<label for="children">{{"kids"|trans }}</label>
						<div class="d-flex flex-row justify-content-between align-items-center">
							<i class="bi bi-dash-circle moins fs-1"></i>
							<input type="number" class="onlynum form-control" id="children" min="0" value="0" max="6">
							<i class="bi bi-plus-circle plus fs-1"></i>
						</div>
					</div>
					<div class="form-group">
						<label for="babies">{{"babies"|trans}}</label>
						<div class="d-flex flex-row justify-content-between align-items-center">
							<i class="bi bi-dash-circle moins fs-1"></i>
							<input type="number" class="onlynum form-control" id="babies" min="0" value="0" max="6">
							<i class="bi bi-plus-circle plus fs-1"></i>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="row d-flex justify-content-around" id="demo">
	<div class="row d-flex justify-content-around" id="demo2">
		{# {% for appart in apparts %}
				<div class="card col-md-3 my-3 mx-1 py-1">
					<div class="card-header">
						<div class="splide" role="group" aria-label="Splide Basic HTML Example">
							<div class="splide__track">
								<ul class="splide__list">
								{% for img in appart.images %}
									<li class="splide__slide"><img src="{{asset("images/appartements/"~img)}}" class="card-img-top" alt="..."></li>
								{% endfor %}
								</ul>
							</div>
						</div>
					</div>
					<a href="{{ path('appart_detail', {'id': appart.id}) }}" class="text-decoration-none">
						<div class="card-body">
							<h5>{{appart.city}}
								-
								{{appart.country}}</h5>
							<small class=" text-black">{{appart.description|slice(0,50)~"..."}}</small>
							<div class=" text-black" style="display: flex; justify-content: space-between; width: 100%;">
								<p>{{appart.price}}
									â‚¬ / Nuit</p>
								<p>{{appart.note}}
									/ 5</p>
							</div>
						</div>
					</a>
				</div>
		{% endfor %} #}
				</div>
				</div>

	{% endblock %}

{% block javascripts %}
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
	<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
	<script src="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/js/splide.min.js"></script>
	<link href="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/css/splide.min.css" rel="stylesheet">
	<link href="https://pagination.js.org/dist/2.6.0/pagination.css" rel="stylesheet">
	<script src="https://cdn.jsdelivr.net/npm/flatpickr/dist/plugins/rangePlugin.js"></script>
	<script src="https://pagination.js.org/dist/2.6.0/pagination.js"></script>
	<script>
	const rangevalue =  
    document.querySelector(".slider-container .price-slider"); 
const rangeInputvalue =  
    document.querySelectorAll(".range-input input"); 
  
// Set the price gap 
let priceGap = 20; 
  
// Adding event listners to price input elements 
const priceInputvalue =  
    document.querySelectorAll(".f input"); 
for (let i = 0; i < priceInputvalue.length; i++) { 
    priceInputvalue[i].addEventListener("input", e => { 
  
        // Parse min and max values of the range input 
        let minp = parseInt(priceInputvalue[0].value); 
        let maxp = parseInt(priceInputvalue[1].value); 
        let diff = maxp - minp 
  
        if (minp < 0) { 
            priceInputvalue[0].value = 0; 
            minp = 0; 
        } 
  
        // Validate the input values 
        if (maxp > 200) { 
            alert("maximum price cannot be greater than 200"); 
            priceInputvalue[1].value = 200; 
            maxp = 200; 
        } 
  
        if (minp > maxp - priceGap) { 
            priceInputvalue[0].value = maxp - priceGap; 
            minp = maxp - priceGap; 
  
            if (minp < 0) { 
                priceInputvalue[0].value = 0; 
                minp = 0; 
            } 
        } 
  
        // Check if the price gap is met  
        // and max price is within the range 
        if (diff >= priceGap && maxp <= rangeInputvalue[1].max) { 
            if (e.target.className === "min-input") { 
                rangeInputvalue[0].value = minp; 
                let value1 = rangeInputvalue[0].max; 
                rangevalue.style.left = `${(minp / value1) * 100}%`; 
            } 
            else { 
                rangeInputvalue[1].value = maxp; 
                let value2 = rangeInputvalue[1].max; 
                rangevalue.style.right =  
                    `${100 - (maxp / value2) * 100}%`; 
            } 
        } 
    }); 
  
    // Add event listeners to range input elements 
    for (let i = 0; i < rangeInputvalue.length; i++) { 
        rangeInputvalue[i].addEventListener("input", e => { 
            let minVal =  
                parseInt(rangeInputvalue[0].value); 
            let maxVal =  
                parseInt(rangeInputvalue[1].value); 
  
            let diff = maxVal - minVal 
              
            // Check if the price gap is exceeded 
            if (diff < priceGap) { 
              
                // Check if the input is the min range input 
                if (e.target.className === "min-range") { 
                    rangeInputvalue[0].value = maxVal - priceGap; 
                } 
                else { 
                    rangeInputvalue[1].value = minVal + priceGap; 
                } 
            } 
            else { 
              
                // Update price inputs and range progress 
                priceInputvalue[0].value = minVal; 
                priceInputvalue[1].value = maxVal; 
                rangevalue.style.left = 
                    `${(minVal / rangeInputvalue[0].max) * 100}%`; 
                rangevalue.style.right = 
                    `${100 - (maxVal / rangeInputvalue[1].max) * 100}%`; 
            } 
        }); 
    } 
}
const clpr = document.getElementById('clpr');
clpr.addEventListener('click', function () {
	$(".min-input").val(0);
	$(".max-input").val(0);
});
		$( "#startdate" ).flatpickr( {
			"plugins": [new rangePlugin(
				{ input: "#enddate"},
			)],
				"dateFormat": "Y-m-d",
		});
	</script>
	<script>
		const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
		const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))

		$('.plus').click(function () {
			$(this).prev().val(+$(this).prev().val() + 1);
			var total = +$("#adults").val() + +$("#children").val()+ +$("#babies").val();
			var travel = "  {{'guests'|trans}}";
			if (total <= 1) {
				travel =" {{'voyageur'|trans}}";
			}
			$(".djf").text(total+travel);
		});

		$('.moins').click(function () {
			if ($(this).next().val() > 0) $(this).next().val(+$(this).next().val() - 1);
			var total = +$("#adults").val() + +$("#children").val()+ +$("#babies").val();
			var travel = " {{'guests'|trans}}";
			if (total <= 1) {
				travel =" {{'voyageur'|trans}}";
			}
			$(".djf").text(total+travel);
		});


		$('#search').click(function () {
			if ($("#dest").val() == "" && $("#startdate").val() == "" && $("#enddate").val() == "" && $("#adults").val() == 0 && $(".max-input").val() == 0 && $(".min-input").val() == 0){
				console.error("Veuillez remplir au moins un champ");
				return;
			}
			$(".collapse").collapse('hide');
			dataContainer = $('#demo2');
			dataContainer.empty();
			dataContainer.append(`
				<div class="spinner-border text-primary" id="loader" role="status">
					<span class="visually-hidden">Loading...</span>
				</div>
			`);
			console.log($("#dest").val(), $("#startdate").val(), $("#enddate").val(), $("#adults").val(), $("#children").val(), $("#babies").val());
			
			$.ajax({
				url: "{{ path('ajax_search') }}",
				type: "POST",
				data: {
					'dest': $("#dest").val(),
					'startdate': $("#startdate").val(),
					'enddate': $("#enddate").val(),
					'adults': $("#adults").val(),
					'children': $("#children").val(),
					'babies': $("#babies").val(),
					'min': $(".min-input").val(),
					'max': $(".max-input").val()
				},
				success: function (datafi) {
					console.log(datafi);
					$('#demo').pagination({
				    dataSource: datafi,
				    pageSize: 9,
				    ajax: {
				        beforeSend: function() {
				            dataContainer.html('<div class="spinner-border text-primary" id="loader" role="status"><span class="visually-hidden">Loading...</span></div>');
				        }
				    },
					'className': 'paginationjs-theme-blue d-flex justify-content-center',
				    callback: function(data, pagination) {
				        // template method of yourself
						console.log(data);
						console.log(pagination);
				        var html = template(data);
				        dataContainer.html(html);
						monune();
				    }
				})
				},
				complete: function () {
					$("#loader").remove();
				},
				error: function (error) {
					console.error(error);
				}
			});
		});
		monune();

function monune() {
	var elms = document.getElementsByClassName( 'splide' );

	for ( var i = 0; i < elms.length; i++ ) {
		new Splide( elms[ i ], {
			type       : 'loop',
			perPage    : 1,
			perMove    : 1,
			pagination : false,
			autoplay   : false,
			breakpoints: {
				600: {
					perPage: 1,
				}
			}
		
		}).mount();
	}
}
dataContainer = $('#demo2');
$('#demo').pagination({
    dataSource: "{{ path('ajax_get_apparts') }}",
	locator: function() {
		return 'data';
	},
    totalNumberLocator: (data) => {
		return data.total;
    },
    pageSize: 9,
    ajax: {
        beforeSend: function() {
            dataContainer.html('<div class="spinner-border text-primary" id="loader" role="status"><span class="visually-hidden">Loading...</span></div>');
        }
    },
	'className': 'paginationjs-theme-blue d-flex justify-content-center',
    callback: function(data, pagination) {
        // template method of yourself
        var html = template(data);
        dataContainer.html(html);
		monune();
    }
})
function template(data) {
	var html =""; 
	data.forEach(appart => {
						html+= `
							<div class="card col-md-3 my-3 mx-1 py-1">
								<div class="card-header">
									<div class="splide" role="group" aria-label="Splide Basic HTML Example">
										<div class="splide__track">
											<ul class="splide__list">`;
												for (key in appart.images) {
													html+=(`<li class="splide__slide"><img src="images/appartements/${appart.images[key]}" class="card-img-top" alt="..."></li>`);
												};
											let route = "{{ path('appart_detail', { id: '0000' }) }}";
											route = route.replace('0000', appart.id);
											html+=(`
											</ul>
										</div>
									</div>
								</div>
								<a href="${route}" class="text-decoration-none">
									<div class="card-body">
										<h5>${appart.city}
											-
											${appart.country}</h5>
										<small class="text-black">${appart.description.slice(0,50)+"..."}</small>
										<div class="text-black" style="display: flex; justify-content: space-between; width: 100%;">
											<p>${appart.price}
												â‚¬ / {{'Nuit'|trans}}</p>
											<p>${appart.note}
												/ 5</p>
										</div>
									</div>
								</a>
							</div>
						`);
					});
	return html;
}
	</script>
{% endblock %}
